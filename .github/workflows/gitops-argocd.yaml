name: noteapp-gitops-pipelines

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  docker-build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Save Docker Images
        run: |
          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t noteapp-nginx:latest ./nginx \
            --load
          docker save noteapp-nginx:latest -o noteapp-nginx.tar

          docker buildx build \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --cache-to type=local,dest=/tmp/.buildx-cache-new,mode=max \
            -t noteapp-backend:latest . \
            --load
          docker save noteapp-backend:latest -o noteapp-backend.tar

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Upload Docker Images as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            noteapp-nginx.tar
            noteapp-backend.tar

      - name: Download Docker Artifacts (for test run)
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker Images
        run: |
          docker load -i noteapp-nginx.tar
          docker load -i noteapp-backend.tar

      - name: Install Docker Compose
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Run App with Docker Compose
        run: docker compose up -d

  docker-push:
    runs-on: ubuntu-latest
    needs: docker-build-and-run
    environment:
      name: production
      url: https://hub.docker.com/

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set short SHA
        id: set_sha
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Download Docker Artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker Images
        run: |
          docker load -i noteapp-nginx.tar
          docker load -i noteapp-backend.tar

      - name: Retag Docker Images with SHA
        run: |
          GIT_SHA=${{ steps.set_sha.outputs.sha }}
          docker tag noteapp-nginx:latest ${{ secrets.DOCKER_USERNAME }}/noteapp-nginx:$GIT_SHA
          docker tag noteapp-backend:latest ${{ secrets.DOCKER_USERNAME }}/noteapp-backend:$GIT_SHA

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASS }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker Images
        run: |
          GIT_SHA=${{ steps.set_sha.outputs.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/noteapp-nginx:$GIT_SHA
          docker push ${{ secrets.DOCKER_USERNAME }}/noteapp-backend:$GIT_SHA