name: noteapp-gitops-pipelines

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  docker-build-and-artifact:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.set_sha.outputs.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set short SHA
        id: set_sha
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Save Docker Images
        run: |
          docker build -t noteapp-nginx:latest ./nginx
          docker save noteapp-nginx:latest -o noteapp-nginx.tar

          docker build -t noteapp-backend:latest .
          docker save noteapp-backend:latest -o noteapp-backend.tar

      - name: Upload Docker Images as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            noteapp-nginx.tar
            noteapp-backend.tar

  retag-and-run:
    runs-on: ubuntu-latest
    needs: docker-build-and-artifact

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Docker Artifacts
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker Images
        run: |
          docker load -i noteapp-nginx.tar
          docker load -i noteapp-backend.tar

      - name: Retag Docker Images with SHA
        run: |
          GIT_SHA=${{ needs.docker-build-and-artifact.outputs.sha }}
          docker tag noteapp-nginx:latest noteapp-nginx:$GIT_SHA
          docker tag noteapp-backend:latest noteapp-backend:$GIT_SHA

      - name: Update docker-compose.yaml with SHA Tags
        run: |
          GIT_SHA=${{ needs.docker-build-and-artifact.outputs.sha }}
          sed -i "s|noteapp-nginx:latest*|noteapp-nginx:$GIT_SHA|g" docker-compose.yml
          sed -i "s|noteapp-backend:latest*|noteapp-backend:$GIT_SHA|g" docker-compose.yml

      - name: Install Docker Compose
        run: |
          mkdir -p ~/.docker/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
          chmod +x ~/.docker/cli-plugins/docker-compose
          docker compose version

      - name: Run App with Docker Compose
        run: docker compose up -d
